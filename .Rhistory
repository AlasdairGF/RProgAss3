list.files()
ages <- rnorm(26,20,3)
ages
ages <- round(ages)
ages
checker <- ages<18
if (ages[checker]) print "a"
if (ages[checker]) print( "a")
?"if"
?print
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
?"for"
?random
??random
source('~/.active-rstudio-document')
makeAge()
ages
if(ages[2]<18) ages[2]<-ages[2]+3
ages
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
abs(round(rnorm(1,2,1)))
length(ages)
for (l in 1:26) print ages[l]
for (l in 1:26) print (ages[l])
ages
if (ages[l]<18) ages[l]<-ages[l]+abs(round(rnorm(1,2,1)))
ages
for (x in 1:26) {if (ages[l]<18) ages[l]<-ages[l]+abs(round(rnorm(1,2,1)))}
ages
for (l in 1:26) {if (ages[l]<18) ages[l]<-ages[l]+abs(round(rnorm(1,2,1)))}
ages
ages <- round(rnorm(26,20,3))
ages
seq(5)
for (l in seq(length(ages))) {if (ages[l]<18) ages[l]<-ages[l]+abs(round(rnorm(1,2,1)))}
ages
makeAges()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
makeAge()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
source('~/.active-rstudio-document')
makeAge()
print(makeAge())
ages<-makeAge()
ages
hist(ages)
ages<-makeAge(52)
source('~/.active-rstudio-document')
ages<-makeAge(52)
ages
ages<-makeAge(26)
ages
rbinom(n, size, prob)
rbinom(5)
rbinom(5,1)
rbinom(5,1,0.5)
rbinom(5,10,0.5)
j <- rbinom(1000,10,0.5)
hist(j)
j <- rbinom(1000,1,0.5)
hist(j)
rm(j,f,l,x,ages,checker)
x <- "s"
x <- "t"
x[2] <- "t"
x[2] <- "5"
j <- rbinom(1000,1,0.75)
hist(j)
source('~/.active-rstudio-document')
makeGen(26)
source('~/.active-rstudio-document')
makeGen(26)
print(makeGen(26))
list()
ls()
rm(ls())
rm(add2,j,makeAge,makeGen)
rm(x)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11],fulldata[17],fulldata[23])
names(data) <- c("Hosp","State","ha","hf","pn")
tail(data$pn)
dataPN <- data[order(data$pn,data$Hosp) & !is.na(data$pn),]
tail(dataPN)
dataPN <- data[order(data$pn,data$Hosp,na.last = NA)
?order
dataPN <- data[order(data$pn,data$Hosp,na.last = FALSE)
dataPN <- data[order(data$pn,data$Hosp,na.last = FALSE),]
tail(dataPN)
?complete.cases
a <- c(letters)
b <- rnorm(26)
b[10] <- NA
b[5] <- NA
b[15] <- NA
b[20] <- NA
b[25] <- NA
b
b <- complete.cases(b)
b
b <- rnorm(26)
?seq
b[seq(1,26,5)]<-NA
b
c<-b[complete.cases(b)]
c
d <- matrix(13,2,b)
d <- matrix(b,13,2)
d
e<-e[complete.cases(3),]
e<-d[complete.cases(3),]
e
e<-d[complete.cases(e),]
rm(e)
e<-d[complete.cases(d),]
e
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
rankhospital2("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital2("TX", "heart failure", 4)
rankhospital2("MD", "heart attack", "worst")
rankhospital2("MN", "heart attack", 5000)
rm(rankhospital,rankhospital2)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
rm(d,e,a,b,c)
tester <- data.frame()
rm(tester)
?data.frame
pNames <- c("Alasdair","Selena","Joshua","Zandie","Cassie","Charlie","Taz","Ollie")
pAges <- c(43,40,7,5,41,40,37,39,5)
pNames <- c("Alasdair","Selena","Joshua","Woodrow","Zandie","Cassie","Charlie","Taz","Ollie")
pNumLegs <- seq(9,2)
pNumLegs <- c(2,2,2,4,2,2,2,2,2)
length(pNumLegs)
GFs <- data.frame(pNames,pAges,pNumLegs)
GFs
newbie <- c("Intruder",500,1)
newbie
?rbind
newbie <- list("Intruder",500,1)
newbie
rbind(GFs,newbie)
GFs <- data.frame(pNames,pAges,pNumLegs,stringsAsFactors=FALSE)
GFs
rbind(GFs,newbie)
rankall <- function(outcome, num = "best") {
emptyDF <- data.frame(state=character(),hosp=character)
emptyDF <- data.frame(state=character(),hosp=character())
emptyDF
rm(emptyDF)
getwd()
write.csv(GFs,"../GFs.csv")
GFs
rbind(GFs,newbie)
GFs
GFs <- rbind(GFs,newbie)
GFs
write.csv(GFs,"../GFs.csv")
states <- levels(factor(data$State))
states
GFsT1 <-"Alien"
GFsT2 <-7
GFsT3 <-7
GFsT2 <-NA
rbind(GFs,list(GFsT1,GFsT2,GFsT3))
rbind(GFs,GFsT1,GFsT2,GFsT3)
GFs$pAges
GFs$pAges[3]
GFs[1,1]
GFs[2,1]
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
tail(rankall("heart attack",best))
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
tail(rankall("heart attack",best))
tail(rankall("heart attack","best"))
states <- levels(factor(data$State)) # vector of states
states
tail(rankall("heart attack",2))
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
head(data)
results <- data.frame(hospital=character(),state=character())
results
tempData <- data[data$State == states[1],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
tail(tempData)
results <- rbind(results,list(tempData$Hosp[1],tempData$State[1])) # add
results
results <- data.frame(hospital=character(),state=character(),row.names=c("hospital","state"))
results <- data.frame(hospital=character(),state=character())
results
colnames(results)<-c("hospital","state")
results
results <- rbind(results,list(tempData$Hosp[1],tempData$State[1])) # add
results
colnames(results)<-c("hospital","state")
results
tempData <- data[data$State == states[2],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind(results,list(tempData$Hosp[1],tempData$State[1])) # add
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 5), 10)
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
num<-1
# first loop
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
tempDAta
tempData
results <- rbind(results,list(tempData$Hosp[num],tempData$State[num])) # add
results
str(results[,1])
loop<-2
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind(results,list(tempData$Hosp[num],tempData$State[num])) # add
?rbind.data.frame
results
results <- rbind.data.frame(results,list(tempData$Hosp[num],tempData$State[num])) # add
reults
results
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
rm(tempData)
results
str(results[,1])
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind(results,list(tempData$Hosp[num],tempData$State[num])) # add
results
str(results[,1])
rm(tempData)
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind.data.frame(results,list(tempData$Hosp[num],tempData$State[num])) # add
results
results2 <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
r2add <- data.frame(c("Prov Alaska","AK"))
r2add <- data.frame(c("Prov Alaska","AK"),hospital=character(),state=character(),stringsAsFactors=FALSE)
?data.frame
r2add <- data.frame(hospital="Prov Alaska",state="AK",stringsAsFactors=FALSE)
r2add
str(r2add[,1])
results2 <- rbind(results,r2add)) # add
results2 <- rbind(results,r2add) # add
results
results2
r2add
r2v <- c("ThisPlace","AK")
rbind(results2,r2v)
results2 <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
rbind(results2,r2v)
results2
rbind(results2,as.matrix(r2v,nrow=1)
)
rbind(results2,matrix(r2v,nrow=1))
r2v2<- c("nudderplace","TX")
rbind(results2,matrix(r2v2,nrow=1))
results2 <- rbind(results2,matrix(r2v,nrow=1))
results2
results2 <- rbind(results2,matrix(r2v2,nrow=1))
results2
str(results2)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
rankall("heart attack", 20)
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
if (!outcome %in% c("heart attack", "heart failure", "pneumonia")) stop("invalid outcome")
num<-2
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
View(tempData)
num<-2
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
states <- levels(factor(data$State)) # vector of states
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind(results,matrix(c(tempData$Hosp[num],tempData$State[num]),nrow=1)) # add
View(results)
loop<-2
View(tempData)
tempData <- data[data$State == states[loop],] # select each state in turn
View(tempData)
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
View(tempData)
results <- rbind(results,matrix(c(tempData$Hosp[num],tempData$State[num]),nrow=1)) # add
View(results)
results
tempData$Hosp[num]
tempData$State[num]
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 20)
)
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
num<-2
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
results <- rbind(results,matrix(c(tempData$Hosp[num],tempData$State[num]),nrow=1)) # add
results
tempData$Hosp[num]
c(tempData$Hosp[num],tempData$State[num])
c(as.character(tempData$Hosp[num]),as.character(tempData$State[num]))
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
rbind(results,c(as.character(tempData$Hosp[num]),as.character(tempData$State[num])))
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 20))
#start again
num<-2
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
newRow <- c(as.character(tempData$Hosp[num]),as.character(tempData$State[num]))
results <- rbind(results,newRow) # add
results
loop<-2
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
newRow <- c(as.character(tempData$Hosp[num]),as.character(tempData$State[num]))
results <- rbind(results,newRow) # add
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 20))
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 20))
getwd()
GFs <- read.csv("../GFs.csv")
gfs
GFs
GFs$X <- NULL
GFs
aa <- c("Zebedee","Zachariah")
bb <- c(98,99)
cc <- C(2,2)
cc <- c(2,2)
gfadd <- data.frame(c(aa,bb,cc))
gfadd
gfadd <- data.frame(c(aa,bb,cc),2,3)
gfadd
gfadd <- data.frame(aa,bb,cc)
gfadd
GFs
rbind(GFs,gfadd)
colnames(gfadd) <- colnames(GFs)
rbind(GFs,gfadd)
GFs
GFs <- rbind(GFs,gfadd)
GFs
GFs[10:11,]<-NULL
GFs[10:11,]
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
rankall("heart attack",2)
fff <- rankall("heart attack",2)
fff
rm(fff)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
fff <- rankall("heart attack",2)
fff
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
num<-2
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
loop <- 1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
newRow <- data.frame(hospital=as.character(tempData$Hosp[num]),state=as.character(tempData$State[num]))
newRow
results <- rbind(results,matrix(newRow,nrow=1)) # add
results
results <- rbind(results,newRow) # add
colnames(newRow)<-colnames(results)
results <- rbind(results,newRow) # add
results
loop<-2
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
newRow <- data.frame(hospital=as.character(tempData$Hosp[num]),state=as.character(tempData$State[num]))
colnames(newRow)<-colnames(results)
results <- rbind(results,newRow) # add
results
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
head(rankall("heart attack", 20))
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
fff <- rankall("heart attack",2)
fff
fff <- rankall("heart attack",20)
fff
tempData
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
num<-2
data <- data.frame(fulldata[2],fulldata[7],fulldata[11])
names(data) <- c("Hosp","State","rate")
data<-data[complete.cases(data$rate),] # strip out all rows where rate is NA
results <- data.frame(hospital=character(),state=character(),stringsAsFactors=FALSE)
states <- levels(factor(data$State)) # vector of states
head(data)
View(data)
loop<-1
tempData <- data[data$State == states[loop],] # select each state in turn
tempData
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
tempData
newRow <- data.frame(hospital=as.character(tempData$Hosp[num]),state=as.character(tempData$State[num]))
newRow
colnames(newRow)<-colnames(results)
results
results <- rbind(results,newRow) # add
results
loop<-2
tempData <- data[data$State == states[loop],] # select each state in turn
tempData <- tempData[order(tempData$rate,tempData$Hosp),] # order it
head(tempData)
newRow <- data.frame(hospital=as.character(tempData$Hosp[num]),state=as.character(tempData$State[num]))
newRow
colnames(newRow)<-colnames(results)
results <- rbind(results,newRow) # add
results
colnames(results)<-c("hospital","state")
results
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
rankall("heart attack",2)
fff<-rankall("heart attack",2)
fff
length(states)
seq(length(states))
source('H:/PortableApps/GitPortable/Data/home/ass3/rankall.R')
fff<-rankall("heart attack",2)
fff
head(rankall("heart attack", 20), 10)
str(fulldata)
ch <- is.na(fulldata)
ch <- is.na(fulldata$Hospital.Name)
sum(ch)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
