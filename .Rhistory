nester(NA)
traceback()
nester(NA)
z <- traceback()
z
x <- list(a = 1:5, b = rnorm(10), c=c(10,15,13,12))
lapply(x,mean)
?runif
lapply(1:4,runif,10,15)
lapply(1:4,runif,max=10)
x <- list (a = matrix(1:4,2,2), b=matrix(1:12,3,4))
x
lapply(x,function(z) x(,z))
lapply(x,function(z) x[,z])
rm(z)
lapply(x,function(z) x[,z])
lapply(x,function(elt) x[,elt])
lapply(x,function(z) z[,1])
lapply(x,function(z) z[1,])
sapply(x,function(z) z[,1])
x <- list (a = matrix(1:4,2,2), b=matrix(runif(4),2,2))
x
sapply(x,function(z) z[,1])
j <- rnorm(200,20,10)
j
?round
j <- matrix(round(rnorm(200),2),20,10))
j <- matrix(round(rnorm(200),2),20,10)
j
apply(j,2,mean)
apply(j,1,mean)
length(apply(j,1,mean))
k <- matrix(round(rnorm(75),2),5,5,3)
k
dim(k)
?matrix
j
apply(j,1,quantile)
apply(j,1,quantile,probs=c(0.25,0.75))
?gl
m <- rnorm(90)
m <- round(rnorm(90),2)
m_fact <- gl(3,length=90)
traceback()
m_fact <- gl(3,10,labels=c("a","b","c"))
m
m_fact
m_fact <- gl(30,10,labels=c("a","b","c"))
m_fact
m_fact <- gl(3,90,labels=c("a","b","c"))
m_fact
m_fact <- gl(3,30,labels=c("a","b","c"))
length(m_fact)
length(m)
m_fact
tapply(m,m_fact,mean)
tapply(m,m_fact,mean,simplify=FALSE)
n <- split(m,m_fact)
n
library(datasets)
head(airquality)
air <- airquality
lapply(split(air,air$Month),mean)
lapply(split(air$Temp,air$Month),mean)
head(air)
sapply(split(air$Temp,air$Month),mean)
lapply(split(air[,c("Temp","Ozone")],air$Month),mean)
lapply(split(air[,c("Temp","Ozone")],air$Month),mean,na.rm=TRUE)
mapply(rnorm,1:5,1:5,2)
mapply(rnorm,5,1:5,2)
output <- mapply(rnorm,5,1:5,2)
tapply(output,1,sd)
apply(output,1,sd)
apply(output,2,sd)
apply(output,2,mean)
?rnorm
output <- mapply(rnorm,5,0,1:5)
output
apply(output,2,sd)
apply(output,1,sd)
library(datasets)
data(iris)
?iris
colMeans(iris)
head(iris)
head(iris[,"Sepal.Length"])
head(iris["Sepal.Length",])
mean(iris$Sepal.Length)
apply(iris[,1:4],2,mean)
data(mtcars)
?mtcars
head(mtcars)
?with
tapply(mtcars$mpg,mtcars$cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
with(mtcars,tapply(mpg,cyl,mean))
mean(split(mtcars$hp,mtcars$cyl))
split(mtcars$hp,mtcars$cyl)
split(mtcars$hp,mtcars$cyl[4])
split(mtcars$hp,mtcars$cyl)
split(mtcars$hp,mtcars$cyl)
head(mtcars)
with(mtcars,tapply(hp,cyl,mean))
res=with(mtcars,tapply(hp,cyl,mean))
res<-with(mtcars,tapply(hp,cyl,mean))
res
res["4"]
res[8]
res["8"]=res["f"]
res
res<-with(mtcars,tapply(hp,cyl,mean))
res
res["8"]-res["4"]
datasets(iris)
dataset(iris)
data(iris)
head(iris)
iris_al <- split(iris[,1:4],iris[,5])
iris_al
head(iris)
head(iris_al)
colMeans(iris_al$virginica)
?solve
source('~/R/Assignments/ass2_mean_eg.R')
v <- makeVEctor()
v <- makeVector()
v
v$set(20:40)
v$get()
cachemean(v)
cachemean(v)
rm v
rm (v)
getmean()
v <- makeVector()
getmean(v)
V
v
v$getmean()
v$setmean(c(1,6,4,8,1,4))
v$getmean()
rm(v)
v <- makeVector()
v$set(c(1,6,4,8,1,4))
v$getmean()
v$get
rm(v)
v <- makeVector()
v
v$set(c(1,6,4,8,1,4))
v$get()
cachemean(v)
cachemean(v)
source('H:/PortableApps/GitPortable/Data/home/ass2/ProgrammingAssignment2/cachematrix.R')
?matrix
testerM <- matrix(1:10,2,5)
testerM
testingM <- makeCacheMatrix(testerM)
rm(testingM)
testingM <- makeCacheMatrix()
testingM
testingM$set(testerM)
testingM$get()
testingM$getMatrix()
rm (testingM,testerM,v)
testerM <- matrix(1:4,2,2)
testerM
solve(testerM)
det(testerM)
source('H:/PortableApps/GitPortable/Data/home/ass2/ProgrammingAssignment2/cachematrix.R')
MAT <- makeCacheMatrix()
MAT$set(testerM)
MAT$get()
MAT$getMatrix
MAT$getMatrix()
cacheSolve(MAT)
cacheSolve(MAT)
rm(MAT)
source('~/.active-rstudio-document')
MAT <- makeCacheMatrix()
MAT$set(testerM)
MAT$get()
cacheSolve(MAT)
cacheSolve(MAT)
m1 <- matrix(rnorm(25),5,5)
solve(m1)
m2 <- matrix(rnorm(16),4,4)
solve(m2)
solve(m1,m2)
mlist <- list(m1,m2)
solve(mlist)
fry <- function(x,...) solve (x,...)
fry(m1)
fry(m1,m2)
m3 <- matrix(1:25,5,5)
fry(m1,m3)
?solve
solve(m1)
solve(m1) %*% m1
m1-inv <- solve(m1)
m1_inv <- solve(m1)
solve(m1_inv)
m1 %*% m1
big_matrix <- matrix(1:10000,100,100)
head(big_matrix)
BMAT <- makeCacheMatrix()
BMAT$set(big_matrix)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
cacheSolve(BMAT)
big_matrix <- matrix(round(rnorm(10000),2),100,100)
head(big_matrix)
BMAT$set(big_matrix)
BMAT$get()
cacheSolve(BMAT)
cacheSolve(BMAT)
big_matrix <- matrix(round(rnorm(1000000),2),1000,1000)
BMAT$set(big_matrix)
cacheSolve(BMAT)
cacheSolve(BMAT)
library(help = "datasets")
library(MASS)
data(MASS)
data(package="MASS")
DDTobj <- DDT
head(DDT)
DDT
rm(DDT)
head(DDTobj)
DDTobj
rm(DDTobj)
AAA <- Aids2
head(AAA)
str(AAA)
summary(AAA$sex)
summary(AAA)
diff <- (AAA$death - AAA$diag)
?cbind
cbind(AAA,diff)
summary(AAA)
summary(diff)
sd(diff)
plot(diff)
?histogram
??histogram
hist(diff)
str(airquality)
air <- airquality
str(air)
summary(air)
iq <- rnorm(5000,100,15)
iq <- r0norm(5000,100,15)
iq <- round(rnorm(5000,100,15),2)
hist(iq)
?hist
hist(iq,breaks=20)
hist(iq,breaks=30)
?rnorm
dnorm(iq)
dnorm(iq,100,15)
?rpois
nudder <- rpois(1000)
nudder <- rpois(1000,10)
hist(nudder)
plot(nudder)
hist(nudder,breaks=30)
nudder <- rpois(1000,3)
hist(nudder,breaks=30)
flea <- rpois(10,2)
ppois(4,2)
ppois(1,2)
ppois(2,2)
ppois(10,2)
x=rnorm(100)
e=rnorm(100,0,2)
y=0.5 + 2 * x + e
plot(x,y)
set.seed(20)
x=rnorm(100)
e=rnorm(100,0,2)
y=0.5 + 2 * x + e
plot(x,y)
set.seed(10)
x=rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y=0.5 + 2 * x + e
plot(x,y)
summary(y)
str(y)
boxplot(x)
boxplot(y,x)
boxplot(x,y)
?boxplot
boxplot(y~x)
plot(1:100, 1:100, type="n", xlab="", ylab="")
curve(x^2*0.01, add=TRUE)
text(80, 50, "This is a graph of")
text(80, 45, "the equation")
text(80, 37, expression(y == frac(1,100) * x^2))
points(x=c(20, 60, 90), y=c(4, 36, 81), pch=6)
points(x=rep(100,10), y=seq(0,90,10), pch=seq(1,20,2))
abline(a=-18, b=1.1, col="red")
abline(h=20, lty=2)
abline(v=20, lty=3)
lines(x=c(40, 40, 60, 60), y=c(80, 100, 100, 80), type="b")
lines(x=c(40, 60), y=c(80, 80), type="l")
title(main="A Drawing To Put On the Refrigerator!")
title(xlab="x", col.lab="white")
title(xlab="This is the x-axis", col.lab="black")
title(xlab="x", col.lab="green")
title(ylab="y=0.01x^2",col.lab="black")
title(xlab="x", col.lab="white")
title(xlab="This is the x-axis", col.lab="black")
?curve
curve(0.25 * x^2 + 2x + 1, add=TRUE)
curve(expression(0.25 * x^2 + 2x + 1), add=TRUE)
curve(as.expression(0.25 * x^2 + 2x + 1), add=TRUE)
curve(0.25 * x^2 + 2*x + 1, add=TRUE)
?curve )
?curve
?col
?detach
search()
rm(add2)
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
setwd("H:/PortableApps/GitPortable/Data/home/ass3/")
fulldata <- read.csv("outcome-of-care-measures.csv", na.strings="Not Available")
data <- data.frame(fulldata[2],fulldata[7],fulldata[11],fulldata[17],fulldata[23])
names(data) <- c("Hosp","State","heart attack","heart failure","pneumonia")
head(data)
attach(data)
search()
detach(data)
search()
attach(data)
pneumonia
?sample
samp <- sample(data,100)
nrow(data)
samp <- data[sample(nrow(data),100),]
samp
row.names<-.default
rownames(samp) <- 1:100
samp
samp
attach(samp)
samp <- samp[order(pneumonia,Hosp),]
samp
samp <- samp[order(state && pneumonia,Hosp),]
names(samp)
samp <- samp[order(State && pneumonia,Hosp),]
samp <- samp[order(State & pneumonia,Hosp),]
samp
pickState <- "TX"
samp <- samp[State==pickState,]
samp
set.seed(1)
samp <- data[sample(nrow(data),100),]
rownames(samp) <- 1:100
search()
detach(data)
detach(samp)
attach(samp)
samp(,pneumonia)
pneumonia
samp2 <- samp[State==pickState]
samp2 <- samp[State==pickState,]
samp2
rm(samp2)
samp <- samp[order(pneumonia),]
samp
rownames(samp) <- 1:length(samp)
length(samp)
rownames(samp) <- 1:nrows(samp)
nrows(samp)
nrow(samp)
rownames(samp) <- 1:nrow(samp)
samp
samp2 <- samp[State==pickState]
samp2 <- samp[State==pickState,]
samp2
detach(samp)
rm(samp,samp2)
samp <- data[sample(nrow(data),100),]
samp2 <- samp[State==pickState,]
samp2 <- samp[samp$State==pickState,]
samp2
samp3 <- samp2[order(samp2$pneumonia),]
samp3
res <- samp3[1,1]
res
res <- as.character(samp3[1,1])
res
elseif
?if
?else
?elseif
??else
?"else"
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
best("TX","heart attack")
best("TX","pneumonia")
samp3
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
best("TX","pneumonia")
best("AL","pneumonia")
names(data)
dataTX <- data[data$State=="TX",]
head(dataTX)
sortedTX <- dataTX[order(dataTX$pneumonia),]
head(sortedTX)
sortedTX$pneumonia
sortedTX <- dataTX[order(dataTX$pneumonia,descending=TRUE),]
?order
sortedTX <- dataTX[order(dataTX$pneumonia,decreasing=TRUE),]
sortedTX$pneumonia
?`[`]
?`["`"]
?`[`
head(sortedTX)
sortedTX(1,1)
sortedTX[1,1]
as.character(sortedTX[1,1])
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
xxx <- best("TX","pneumonia")
xxx
source('H:/PortableApps/GitPortable/Data/home/ass3/ass3.R')
xxx <- best("TX","pneumonia")
xxx
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
submit()
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
best("SC", "heart attack")
max(data[,3])
min(data[,3])
?max
max(data[,3],na.rm=TRUE)
dataSC <- data[data$State=="SC",]
max(dataSC[,3])
max(dataSC[,3],na.rm=TRUE)
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
best("SC", "heart attack")
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
best("SC", "heart attack")
source('H:/PortableApps/GitPortable/Data/home/ass3/best.R')
submit()
submit()
submit()
samp3
samp3[1,"State"]
muffles <- samp[order("heart attack"),]
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("SC", "heart attack")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("SC", "heart attack")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("SC", "heart attack")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("SC", "pneumonia")
rankhospital("AL", "pneumonia")
rankhospital("TX", "pneumonia")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("TX", "pneumonia")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("TX", "pneumonia",1)
rankhospital("TX", "pneumonia",2)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("TX", "pneumonia",2)
rankhospital("TX", "pneumonia",6)
submit()
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
submit()
rankhospital("NC", "heart attack", "worst")
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
samp3
samp
samp4 <- samp[state==TX,]
samp4 <- samp[State==TX,]
samp4 <- samp[samp$State==TX,]
names(samp)
samp4 <- samp[samp$State=="TX",]
length(samp4)
samp4 <- samp[samp$State=="TX" | samp$State=="AL",]
length(samp4)
samp4 <- samp[samp$State=="TX" || samp$State=="AL",]
length(samp4)
samp4
samp4 <- samp[samp$State=="TX" | samp$State=="AL",]
samp4
samp
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("NC", "heart attack", "worst")
rankhospital("NC", "pneumonia", "worst")
ff <- rankhospital("NC", "pneumonia", "worst")
ff$pn
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
submit()
6
submit()
submit()
source('H:/PortableApps/GitPortable/Data/home/ass3/rankhospital.R')
